%% Add path
addpath('../../neuRoi')
%% Clear variables
clear all
close all
%%
% Step01 Load experiment configuration from file
%rootPaths = load('../../paths/rootPaths.mat');
expName = 'Nesibe-20200604-f2';
resultDir = 'W:\scratch\gfriedri\teminesi\2Photon_RawData\NT0012_2\20200604\f2\results';
expFilePath = fullfile(resultDir,sprintf('experimentConfig_%s.mat',expName));
foo = load(expFilePath);
myexp = foo.myexp;
disp(myexp.expInfo)
%% Step02 (optional) Sepcify options for opening a trial
myexp.roiDir = myexp.getDefaultDir('roi');

myexp.loadFileType = 'binned';
myexp.trialOptionRaw = struct('process',true,...
                              'noSignalWindow',[1 6],...
                              'intensityOffset',-30);
myexp.trialOptionBinned = struct('process',false,...
                                 'noSignalWindow',[],...
                                 'intensityOffset',-10);

myexp.responseOption = struct('offset',-10,...
                        'fZeroWindow',[8 13],...
                        'responseWindow',[17 30]);
myexp.responseMaxOption = struct('offset',-10,...
                           'fZeroWindow',[3 5],...
                           'slidingWindowSize',5);
myexp.mapsAfterLoading = {'response','responseMax'};
% myexp.mapsAfterLoading = {};

myexp.alignToTemplate = true;

%% Calculate red channel images if not done before 

anatomyDataPath = myexp.rawDataDir;
anatomyDataFile = {'NT0012_21dpf_f2_anatomy_001_.tif'};               
anatomyRedDir = 'W:\scratch\gfriedri\teminesi\2Photon_RawData\NT0012_2\20200604\f2\results\anatomyRed';

binParam.shrinkFactors = [1, 1, 375];
binParam.trialOption = struct('process',true,'noSignalWindow',[1 4]);
binParam.depth = 8;
for planeNum=1:myexp.expInfo.nPlane
batch.binMovieAnatomyBatch(binParam,anatomyRedDir,planeNum,myexp.expInfo.nPlane,anatomyDataPath,anatomyDataFile);
end

%% If red anatomy calculated before: Name of the anatomy image

anatomyDataFile='NT0012_21dpf_f2_anatomy_001_.tif';

%%  Step03 Open neuRoi GUI
myexp.planeNum = 2;
myexp.mapsAfterLoading = {'response'};
mycon = NrController(myexp);

%% Add local correlation (optional)
mapType = 'localCorrelation';
mapOption = struct('tileSize',32);
trial = myexp.getCurrentTrial();
trial.calculateAndAddNewMap(mapType,mapOption);
%% Load the 2nd channel anatomy
mapFilePath = strcat(myexp.resultDir,'\anatomyRed\plane0',num2str(myexp.planeNum),'\binned_x1y1z375_',anatomyDataFile);
trial = myexp.getCurrentTrial();
trial.importMap(mapFilePath);
%% Copy ROI
trial = myexp.getCurrentTrial();
idx = trial.findRoiByTag(trial.selectedRoiTagArray(1))
roiClipboard = trial.roiArray(idx)

%% Paste ROI
trial = myexp.getCurrentTrial();
trial.addRoi(roiClipboard);

%% Remove very small ROIs generated by false clicking
%% Delete point ROIs
%% Delete ROIs with only one point
% Get current trial
trial = myexp.getCurrentTrial();
roiArray = trial.roiArray;
deleteTagArray = {};
for k = 1:length(roiArray)
    roi = roiArray(k);
    if size(roi.position,1)<5
        deleteTagArray{end+1} = roi.tag;
    end
end
% Delete point ROIs
for k=1:length(deleteTagArray)
    tag = deleteTagArray{k};
    trial.deleteRoi(tag);
end
%% Step04 Extract time trace with template ROI in all trials
% Apply template ROI map and correct ROIs in each trial
% If you accidentally closed the GUI, the following code might
% throw an error. In that case, just run Step01, then continue with
% Step04

myexp.alignToTemplate = true;
myexp.trialOptionRaw = struct('process',true,...
                              'noSignalWindow',[1 6]);

fileIdxList = 1:24;
planeNum = myexp.planeNum;
planeString = NrModel.getPlaneString(planeNum);

prefix = 'binned_x1y1z2_';
appendix = '_RoiArray_GC';
% roiFileNameList = cellfun(@(x) iopath.modifyFileName(x,prefix,appendix,'mat'),myexp.rawFileList(1:24),'UniformOutput',false);
% roiFileNameList = cellfun(@(x) iopath.modifyFileName2(x,prefix,appendix),myexp.rawFileList(1:24),'UniformOutput',false);
% for pp=1:24;
%     roiFileName{pp}=strcat(roiFileNameList{pp},num2str(pp),'.mat')
% end
% roiFileName=roiFileName';
roiFileName = iopath.modifyFileName(myexp.rawFileList(10),prefix, ...
                                    appendix,'mat');
 roiFileNameList2 = repmat(roiFileName,24,1);
roiFileList = cellfun(@(x) fullfile(myexp.roiDir,planeString,x), ...
                      roiFileNameList2,'UniformOutput',false);


plotTrace = true;
myexp.extractTimeTraceBatch(fileIdxList, ...
                            roiFileList,planeNum, ...
                            plotTrace);
%% Save ROI tags and results diretoryes for each roi to pool later
planeString = NrModel.getPlaneString(myexp.planeNum);
resultDirSave= fullfile(myexp.resultDir,'time_trace', ...
                              planeString); 
expID = repmat(cellstr(resultDirSave),length(roiArray),1);
for roiroi=1:length(roiArray)
    roiID {roiroi,1} = roiArray (roiroi).tag;
end

roiIDFilePath = fullfile(resultDirSave, ...
                           'roiID.mat');
%save(roiIDFilePath,'roiID','expID','category')
save(roiIDFilePath,'roiID','expID')